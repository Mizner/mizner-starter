/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(1);
__webpack_require__(2);
// require('./scripts/navigation/navigation');
__webpack_require__(3);

/***/ }),
/* 1 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


(function () {
    var menuID = document.getElementById("mainNavigation");

    if (!menuID) {
        return;
    }

    var hasChildren = menuID.querySelectorAll('.has-children');

    if (!hasChildren) {
        return;
    }

    var svgIconArrows = function svgIconArrows(button) {

        var svg = button.querySelector('use');
        var icon = svg.getAttribute('xlink:href');
        if ('#icon-angle-down' === icon) {
            svg.setAttribute('xlink:href', '#icon-angle-up');
        } else {
            svg.setAttribute('xlink:href', '#icon-angle-down');
        }
    };

    Object.keys(hasChildren).forEach(function (listItem) {
        var item = hasChildren[listItem];
        var button = item.querySelector('button');
        button.addEventListener('click', function (e) {
            e.preventDefault();
            item.classList.toggle('expanded');
            svgIconArrows(button);
            item.addEventListener('focusout', function (e) {
                if (!e.relatedTarget) {
                    item.classList.remove('expanded');
                }
            });
        });
    });
})();

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Mobile Menu Navigation Actions
 */
(function () {
    var menuButton = document.getElementById('mainNavigationButton');
    if (!menuButton) {
        return;
    }

    var menuButtonClickEvent = function menuButtonClickEvent() {

        var menuNav = document.getElementById('mainNavigation');

        menuButton.addEventListener('click', function () {
            var aria = menuNav.getAttribute('aria-expanded');
            if (aria === 'false') {
                menuNav.setAttribute('aria-expanded', 'true');
                menuButton.setAttribute('aria-expanded', 'true');
            } else {
                menuNav.setAttribute('aria-expanded', 'false');
                menuButton.setAttribute('aria-expanded', 'false');
            }
        });
    };

    if (menuButton) {

        menuButtonClickEvent(menuButton);
    }
})();

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,