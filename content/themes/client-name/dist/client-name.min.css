:root {
  /**
  Font Settings
   */

  /**
   Custom colors
    */

  /**
   Theme Colors
    */



}
:root {
}
/*! sanitize.css v4.1.0 | CC0 License | github.com/jonathantneal/sanitize.css */
/* Display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}
/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template, /* 1 */
[hidden] {
  display: none;
}
/* Elements of HTML (https://www.w3.org/TR/html5/semantics.html)
   ========================================================================== */
/**
 * 1. Remove repeating backgrounds in all browsers (opinionated).
 * 2. Add box sizing inheritence in all browsers (opinionated).
 */
*,
::before,
::after {
  background-repeat: no-repeat; /* 1 */
  -webkit-box-sizing: inherit;
          box-sizing: inherit; /* 2 */
}
/**
 * 1. Add text decoration inheritance in all browsers (opinionated).
 * 2. Add vertical alignment inheritence in all browsers (opinionated).
 */
::before,
::after {
  text-decoration: inherit; /* 1 */
  vertical-align: inherit; /* 2 */
}
/**
 * 1. Add border box sizing in all browsers (opinionated).
 * 2. Add the default cursor in all browsers (opinionated).
 * 3. Add a flattened line height in all browsers (opinionated).
 * 4. Prevent font size adjustments after orientation changes in IE and iOS.
 */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  cursor: default; /* 2 */
  font-family: sans-serif; /* 3 */
  line-height: 1.5; /* 3 */
  -ms-text-size-adjust: 100%; /* 4 */
  -webkit-text-size-adjust: 100%; /* 5 */
}
/* Sections (https://www.w3.org/TR/html5/sections.html)
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/**
 * Correct the font sizes and margins on `h1` elements within
 * `section` and `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: .67em 0;
}
/* Grouping content (https://www.w3.org/TR/html5/grouping-content.html)
   ========================================================================== */
/**
 * 1. Correct font sizing inheritance and scaling in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}
/**
 * 1. Correct the height in Firefox.
 * 2. Add visible overflow in Edge and IE.
 */
hr {
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}
/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none;
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Add a bordered underline effect in all browsers.
 * 2. Remove text decoration in Firefox 40+.
 */
abbr[title] {
  border-bottom: 1px dotted; /* 1 */
  text-decoration: none; /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Add the correct colors in IE 9-.
 */
mark {
  background-color: #ffff00;
  color: #000000;
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Correct the font size in all browsers.
 */
small {
  font-size: 83.3333%;
}
/**
 * Change the positioning on superscript and subscript elements
 * in all browsers (opinionated).
 * 1. Correct the font size in all browsers.
 */
sub,
sup {
  font-size: 83.3333%; /* 1 */
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -.25em;
}
sup {
  top: -.5em;
}
/*
 * Remove the text shadow on text selections (opinionated).
 * 1. Restore the coloring undone by defining the text shadow (opinionated).
 */
::-moz-selection {
  background-color: #b3d4fc; /* 1 */
  color: #000000; /* 1 */
  text-shadow: none;
}
::selection {
  background-color: #b3d4fc; /* 1 */
  color: #000000; /* 1 */
  text-shadow: none;
}
/* Embedded content (https://www.w3.org/TR/html5/embedded-content-0.html)
   ========================================================================== */
/*
 * Change the alignment on media elements in all browers (opinionated).
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
svg {
  fill: currentColor;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Links (https://www.w3.org/TR/html5/links.html#links)
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove the gaps in underlines in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}
/**
 * Remove the outline when hovering in all browsers (opinionated).
 */
a:hover {
  outline-width: 0;
}
/* Tabular data (https://www.w3.org/TR/html5/tabular-data.html)
   ========================================================================== */
/*
 * Remove border spacing in all browsers (opinionated).
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/* transform-style:  (https://www.w3.org/TR/html5/forms.html)
   ========================================================================== */
/**
 * 1. Remove the default styling in all browsers (opinionated).
 * 3. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  background-color: transparent; /* 1 */
  border-style: none; /* 1 */
  color: inherit; /* 1 */
  font-size: 1em; /* 1 */
  margin: 0; /* 3 */
}
/**
 * Correct the overflow in IE.
 * 1. Correct the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance in Edge, Firefox, and IE.
 * 1. Remove the inheritance in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent the WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Correct the focus styles unset by the previous rule.
 */
:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Correct the border, margin, and padding in all browsers.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: .35em .625em .75em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 2 */
  white-space: normal; /* 1 */
}
/**
 * 1. Remove the vertical scrollbar in IE.
 * 2. Change the resize direction on textareas in all browsers (opinionated).
 */
textarea {
  overflow: auto; /* 1 */
  resize: vertical; /* 2 */
}
/**
 * Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  padding: 0;
}
/**
 * Correct the cursor style on increment and decrement buttons in Chrome.
 */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari for OS X.
 */
::-webkit-search-cancel-button,
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Correct the text style on placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/* WAI-ARIA (https://www.w3.org/TR/html5/dom.html#wai-aria)
   ========================================================================== */
/**
 * Change the cursor on busy elements (opinionated).
 */
[aria-busy="true"] {
  cursor: progress;
}
/*
 * Change the cursor on control elements (opinionated).
 */
[aria-controls] {
  cursor: pointer;
}
/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements (opinionated).
 */
[aria-disabled] {
  cursor: default;
}
/* User interaction (https://www.w3.org/TR/html5/editing.html)
   ========================================================================== */
/*
 * Remove the tapping delay on clickable elements (opinionated).
 * 1. Remove the tapping delay in IE 10.
 */
a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  -ms-touch-action: manipulation; /* 1 */
  touch-action: manipulation;
}
/*
 * Change the display on visually hidden accessible elements (opinionated).
 */
[hidden][aria-hidden="false"] {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute;
}
[hidden][aria-hidden="false"]:focus {
  clip: auto;
}
/* =WordPress Core
-------------------------------------------------------------- */
.alignnone {
  margin: 5px 20px 20px 0;
}
.aligncenter,
div.aligncenter {
  display: block;
  margin: 5px auto 5px auto;
}
.alignright {
  float:right;
  margin: 5px 0 20px 20px;
}
.alignleft {
  float: left;
  margin: 5px 20px 20px 0;
}
a img.alignright {
  float: right;
  margin: 5px 0 20px 20px;
}
a img.alignnone {
  margin: 5px 20px 20px 0;
}
a img.alignleft {
  float: left;
  margin: 5px 20px 20px 0;
}
a img.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.wp-caption {
  background: #fff;
  border: 1px solid #f0f0f0;
  max-width: 96%; /* Image does not overflow the content area */
  padding: 5px 3px 10px;
  text-align: center;
}
.wp-caption.alignnone {
  margin: 5px 20px 20px 0;
}
.wp-caption.alignleft {
  margin: 5px 20px 20px 0;
}
.wp-caption.alignright {
  margin: 5px 0 20px 20px;
}
.wp-caption img {
  border: 0 none;
  height: auto;
  margin: 0;
  max-width: 98.5%;
  padding: 0;
  width: auto;
}
.wp-caption p.wp-caption-text {
  font-size: 11px;
  line-height: 17px;
  margin: 0;
  padding: 0 4px 5px;
}
/* Text meant only for screen readers. */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  white-space: nowrap;
  height: 1px;
  width: 1px;
  overflow: hidden;
}
.screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(0, 0, 0, .6);
          box-shadow: 0 0 2px 2px rgba(0, 0, 0, .6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-size: 14px;
  font-size: 0.875rem;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000; /* Above WP toolbar. */
}
/* https://codex.wordpress.org/Content_Width#Adding_Theme_Support*/
.size-auto,
.size-full,
.size-large,
.size-medium,
.size-thumbnail {
  max-width: 100%;
  height: auto;
}
body {
  background: #ecf0f1;
  color: #333333;
  font-size: 20.8px;
  font-size: 1.3rem;
  font-family: "Baskerville", "Palatino Linotype", "Book Antiqua", Palatino, serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Helvetica Neue", Verdana, Arial, sans-serif;
  line-height: 120%;
  font-weight: 100;
  letter-spacing: 2px;
  margin-bottom: 16px;
  margin-bottom: 1rem;
}
h1 {
  font-size: 48px;
  font-size: 3rem;
}
h2 {
  font-size: 44px;
  font-size: 2.75rem;
}
h3 {
  font-size: 40px;
  font-size: 2.5rem;
}
h4 {
  font-size: 32px;
  font-size: 2rem;
}
h5 {
  font-size: 28px;
  font-size: 1.75rem;
}
h6 {
  font-size: 24px;
  font-size: 1.5rem;
}
h1.post-title,
h2.post-title,
h3.post-title,
h4.post-title,
h5.post-title,
h6.post-title {
  color: #27ae60;
  font-size: 31.2px;
  font-size: 1.95rem;
}
a:link,a:visited {
  color: #3498db;
  text-decoration: none
}
a:link:hover,a:visited:hover {
  color: #3498db;



}
/**
 Navigation Colors
  */
li.page_item, li.menu-item {
  display: inline-block;
  margin-left: -4px
}
li.page_item a, li.menu-item a {
  color: #27ae60;



}
/**
  Container
 */
.container {
  width: 90%;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}
#the-header {

}
#theFooter {
  padding-top: 25px;
  padding-bottom: 25px;
  background: #333333;
  color: #ecf0f1;
}
.sidebar {
  width: 90%;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}
.content-preview h3 {
  font-size: 32px;
  font-size: 2rem;



}
.content-single {

}
.custom-banner {
  padding-top: 50px;
  padding-bottom: 50px;
  background-color: #333333;
  color: #ecf0f1
}
.custom-banner h1,
.custom-banner h2,
.custom-banner h3,
.custom-banner h4,
.custom-banner h5,
.custom-banner h6 {
  font-family: "Brush Script MT", sans-serif;
  letter-spacing: 4px;
  text-transform: uppercase;



}
html::before {
  display: block;
  z-index: 1000;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  font-size: .9em;
  padding: 1.5em 1em 1.5em 4.5em;
  color: white;
  background-color: #DF4F5E;
  background: url("data:image/svg+xml;charset=utf-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%20width%3D%2248px%22%20height%3D%2248px%22%20viewBox%3D%220%200%20512%20512%22%20enable-background%3D%22new%200%200%20512%20512%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpath%20fill%3D%22%23A82734%22%20id%3D%22warning-4-icon%22%20d%3D%22M228.55%2C134.812h54.9v166.5h-54.9V134.812z%20M256%2C385.188c-16.362%2C0-29.626-13.264-29.626-29.625c0-16.362%2C13.264-29.627%2C29.626-29.627c16.361%2C0%2C29.625%2C13.265%2C29.625%2C29.627C285.625%2C371.924%2C272.361%2C385.188%2C256%2C385.188z%20M256%2C90c91.742%2C0%2C166%2C74.245%2C166%2C166c0%2C91.741-74.245%2C166-166%2C166c-91.742%2C0-166-74.245-166-166C90%2C164.259%2C164.245%2C90%2C256%2C90z%20M256%2C50C142.229%2C50%2C50%2C142.229%2C50%2C256s92.229%2C206%2C206%2C206s206-92.229%2C206-206S369.771%2C50%2C256%2C50z%22%2F%3E%3C%2Fsvg%3E") .5em no-repeat, #DF4F5E linear-gradient(#DF4F5E, #CE3741);
  border: 1px solid #C64F4B;
  border-radius: 3px;
  box-shadow: inset 0 1px 0 #EB8A93, 0 0 .3em rgba(0,0,0, .5);
  white-space: pre-wrap;
  font-family: Menlo, Monaco, monospace;
  text-shadow: 0 1px #A82734;
  content: "src/public/css/main.css\A  2:3\9  Expected empty line before at-rule (at-rule-empty-line-before) [stylelint]\A  5:3\9  Expected empty line before at-rule (at-rule-empty-line-before) [stylelint]\A  11:3\9  Expected empty line before at-rule (at-rule-empty-line-before) [stylelint]\A  68:3\9  Expected empty line before at-rule (at-rule-empty-line-before) [stylelint]\A  2:3\9  Expected empty line before at-rule (at-rule-empty-line-before) [stylelint]\A  7:5\9  Expected empty line before at-rule (at-rule-empty-line-before) [stylelint]\A  1:1\9Unexpected empty line before closing brace (block-closing-brace-empty-line-before) [stylelint]\A  58:3\9Unexpected empty line before closing brace (block-closing-brace-empty-line-before) [stylelint]\A  1:1\9Unexpected empty block (block-no-empty) [stylelint]\A  1:1\9Unexpected empty block (block-no-empty) [stylelint]\A  15:3\9  Expected \"#ecf0f1\" to be \"#ECF0F1\" (color-hex-case) [stylelint]\A  17:3\9  Expected \"#27ae60\" to be \"#27AE60\" (color-hex-case) [stylelint]\A  18:3\9  Expected \"#3498db\" to be \"#3498DB\" (color-hex-case) [stylelint]\A  19:3\9  Expected \"#e74c3c\" to be \"#E74C3C\" (color-hex-case) [stylelint]\A  199:3\9  Expected \"#ffff00\" to be \"#FFFF00\" (color-hex-case) [stylelint]\A  247:3\9  Expected \"#b3d4fc\" to be \"#B3D4FC\" (color-hex-case) [stylelint]\A  253:3\9  Expected \"#b3d4fc\" to be \"#B3D4FC\" (color-hex-case) [stylelint]\A  405:3\9  Expected \"#c0c0c0\" to be \"#C0C0C0\" (color-hex-case) [stylelint]\A  44:3\9  Expected \"#fff\" to be \"#FFF\" (color-hex-case) [stylelint]\A  45:3\9  Expected \"#f0f0f0\" to be \"#F0F0F0\" (color-hex-case) [stylelint]\A  90:3\9  Expected \"#f1f1f1\" to be \"#F1F1F1\" (color-hex-case) [stylelint]\A  94:3\9  Expected \"#21759b\" to be \"#21759B\" (color-hex-case) [stylelint]\A  44:3\9  Expected \"#fff\" to be \"#ffffff\" (color-hex-length) [stylelint]\A  2:3\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  3:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  6:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  23:11\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  27:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  38:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  47:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  57:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  60:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  72:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  83:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  99:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  102:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  110:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  120:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  123:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  136:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  146:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  155:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  158:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  168:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  177:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  186:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  194:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  203:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  211:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  219:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  241:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  258:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  261:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  274:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  282:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  290:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  298:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  301:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  311:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  319:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  322:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  331:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  334:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  350:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  356:9\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  360:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  366:10\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  370:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  383:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  392:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  400:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  410:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  423:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  433:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  442:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  451:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  461:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  470:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  479:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  489:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  492:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  500:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  508:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  517:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  520:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  537:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  1:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  79:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  52:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  64:1\9  Expected empty line before comment (comment-empty-line-before) [stylelint]\A  97:3\9Unexpected duplicate \"font-size\" (declaration-block-no-duplicate-properties) [stylelint]\A  14:3\9  Expected single space after \":\" with a single-line declaration (declaration-colon-space-after) [stylelint]\A  82:3\9Unexpected !important (declaration-no-important) [stylelint]\A  93:3\9Unexpected !important (declaration-no-important) [stylelint]\A  132:3\9Unexpected duplicate name monospace (font-family-no-duplicate-names) [stylelint]\A  183:3\9  Expected numeric font-weight notation (font-weight-notation) [stylelint]\A  98:3\9  Expected numeric font-weight notation (font-weight-notation) [stylelint]\A  Expected no more than 1 empty line (max-empty-lines) [stylelint]\A  Expected no more than 1 empty line (max-empty-lines) [stylelint]\A  265:1\9  Expected selector \"audio\" to come before selector \"audio:not([controls])\" (no-descending-specificity) [stylelint]\A  446:1\9  Expected selector \"::-webkit-inner-spin-button\" to come before selector \":-moz-focusring\" (no-descending-specificity) [stylelint]\A  446:1\9  Expected selector \"::-webkit-outer-spin-button\" to come before selector \":-moz-focusring\" (no-descending-specificity) [stylelint]\A  465:1\9  Expected selector \"::-webkit-search-cancel-button\" to come before selector \":-moz-focusring\" (no-descending-specificity) [stylelint]\A  465:1\9  Expected selector \"::-webkit-search-decoration\" to come before selector \":-moz-focusring\" (no-descending-specificity) [stylelint]\A  474:1\9  Expected selector \"::-webkit-input-placeholder\" to come before selector \":-moz-focusring\" (no-descending-specificity) [stylelint]\A  484:1\9  Expected selector \"::-webkit-file-upload-button\" to come before selector \":-moz-focusring\" (no-descending-specificity) [stylelint]\A  525:1\9  Expected selector \"a\" to come before selector \"a:hover\" (no-descending-specificity) [stylelint]\A  181:1\9Unexpected duplicate selector \"b,\Astrong\", first used at line 172 (no-duplicate-selectors) [stylelint]\A  117:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  234:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  238:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  407:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  407:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  407:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  476:3\9  Expected a leading zero (number-leading-zero) [stylelint]\A  216:3\9  Expected \"83.3333\" to be \"83.333\" (number-max-precision) [stylelint]\A  227:3\9  Expected \"83.3333\" to be \"83.333\" (number-max-precision) [stylelint]\A  95:3\9Unexpected vendor-prefix \"-ms-text-size-adjust\" (property-no-vendor-prefix) [stylelint]\A  96:3\9Unexpected vendor-prefix \"-webkit-text-size-adjust\" (property-no-vendor-prefix) [stylelint]\A  308:3\9Unexpected vendor-prefix \"-webkit-text-decoration-skip\" (property-no-vendor-prefix) [stylelint]\A  380:3\9Unexpected vendor-prefix \"-webkit-appearance\" (property-no-vendor-prefix) [stylelint]\A  457:3\9Unexpected vendor-prefix \"-webkit-appearance\" (property-no-vendor-prefix) [stylelint]\A  467:3\9Unexpected vendor-prefix \"-webkit-appearance\" (property-no-vendor-prefix) [stylelint]\A  485:3\9Unexpected vendor-prefix \"-webkit-appearance\" (property-no-vendor-prefix) [stylelint]\A  533:3\9Unexpected vendor-prefix \"-ms-touch-action\" (property-no-vendor-prefix) [stylelint]\A  163:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  7:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  23:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  28:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  32:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  37:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  72:1\9Unexpected qualifying type selector (selector-no-qualifying-type) [stylelint]\A  246:1\9Unexpected vendor-prefix \"::-moz-selection\" (selector-no-vendor-prefix) [stylelint]\A  474:1\9Unexpected vendor-prefix \"::-webkit-input-placeholder\" (selector-no-vendor-prefix) [stylelint]\A  10:3\9Unexpected longhand value '5px auto 5px auto' instead of '5px auto' (shorthand-property-no-redundant-values) [stylelint]\A  5:3\9  Expected \"Verdana\" to be \"verdana\" (value-keyword-case) [stylelint]\A  5:3\9  Expected \"Arial\" to be \"arial\" (value-keyword-case) [stylelint]\A  6:3\9  Expected \"Palatino\" to be \"palatino\" (value-keyword-case) [stylelint]";



}

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/